syntax = "proto2";

package neuro.messages.config;

import "common.proto";

message Logs {
  enum Severity {
    trace = 0;
    debug = 1;
    info = 2;
    warning = 3;
    error = 4;
    fatal = 5;
  }
  
  optional string file_path = 1;
  optional int32 rotation_size = 2 [default = 10];
  optional Severity severity = 3 [default = warning];
  optional bool to_stdout = 4;
}

message Rest {
  required int32 port = 1;
}

message Database {
  enum Block0Format {
    PROTO = 1;
    BSON = 2;
    JSON = 3;
  }
  required string url = 1;
  required string db_name = 2;
  required Block0Format block0_format = 3 [default = PROTO];
  required string block0_path = 4;
}

message Tcp {
  required int32 port = 1;
  repeated Peer peers = 2;
}

message Networking {
  optional int32 max_connections = 1;
  required Tcp tcp = 2;
}

message Config {
  enum SelectionMethod {
    SIMPLE = 0;
    PING = 1;
    RANDOM = 2;
  }

  optional string key_pub_path = 1;
  optional string key_priv_path = 2;
  optional Logs logs = 3;
  required Networking networking = 4;
  optional Database database = 5;
  optional Peer.Status keep_status = 6 [default = CONNECTED]; 
  optional SelectionMethod selection_method = 7 [default = SIMPLE];
  optional Rest rest = 8;
}
