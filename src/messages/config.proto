syntax = "proto2";

package neuro.messages.config;

import "common.proto";
import "messages.proto";

message Logs {
  enum Severity {
    trace = 0;
    debug = 1;
    info = 2;
    warning = 3;
    error = 4;
    fatal = 5;
  }
  
  optional string file_path = 1 [ default = "core.log" ];
  optional int32 rotation_size = 2 [default = 100];
  optional Severity severity = 3 [default = warning];
  optional bool to_stdout = 4;
}

message Rest {
  required int32 port = 1;
  optional string static_path = 2;
  optional uint64 faucet_amount = 3;
}

message GRPC {
  optional int32 port = 1;
}

message BlockFile {
  enum BlockFormat {
    PROTO = 1;
    BSON = 2;
    JSON = 3;
  }
  required BlockFormat block_format = 1 [default = PROTO];
  required string block_path = 2;
}

message _Database {
  required string url = 1;
  required string db_name = 2;
  oneof block0_types {
    BlockFile block0_file = 3;
    Block block0 = 4;
  }
  optional bool empty_database = 5 [default=false];
}

message Tcp {
  required int32 port = 1;
  required string endpoint = 2;
  repeated _Peer peers = 3;
}

message KeysPaths {
  required string key_pub_path = 1;
  required string key_priv_path = 2;
}

message Keys {
  required _KeyPriv key_priv = 1;
  required _KeyPub key_pub = 2;
}

message Networking {
  optional int32 max_connections = 1;
  required Tcp tcp = 2;
  optional int32 peers_update_time = 3 [default = 2];
  repeated KeysPaths keys_paths = 4;
  repeated Keys keys = 5;
  optional int32 connecting_next_update_time = 6 [default = 3];
  optional int32 connected_next_update_time = 7 [default = 10];
  optional int32 default_next_update_time = 8 [default = 7];
  optional int32 keep_old_connection_time = 9 [default = 11];
}

message _Config {
  enum SelectionMethod {
    SIMPLE = 0;
    PING = 1;
    RANDOM = 2;
  }

  optional Logs logs = 1;
  required Networking networking = 2;
  optional _Database database = 3;
  optional _Peer.Status keep_status = 4 [default = CONNECTED]; 
  optional SelectionMethod selection_method = 5 [default = RANDOM];
  optional Rest rest = 6;
  optional GRPC grpc = 10;
  optional string connection_graph_uri = 7;

  // Probability of doing a random transaction during regular_update
  optional float random_transaction = 8;
  optional _NCCAmount random_transaction_amount = 9;
}
