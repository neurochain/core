stages:
  - build
  - doxygen
  - prod_image

variables:
  DOCKER_PROD_IMAGE: $CI_REGISTRY_IMAGE:latest

services:
  - docker:dind
  - mongo:3.6-stretch

build_job:ubuntu_18_04:
  image: registry.gitlab.com/neurochaintech/core/ubuntu:18.04
  stage: build
  tags:
    - cpp
  script:
    - bot_build "Debug"
  artifacts:
    paths:
      - coverage.html
      - build

#build_job:ubuntu_18_04_release:
#  image: registry.gitlab.com/neurochaintech/core/ubuntu:18.04
#  stage: build
#  tags:
#    - cpp
#  script:
#    - bot_build "Release"
#  artifacts:
#    paths:
#      - build
#
#
#build_job:debian_9:
#  image: registry.gitlab.com/neurochaintech/core/debian:sid
#  stage: build
#  tags:
#    - cpp
#  script:
#    - bot_build "Release"
#  artifacts:
#    paths:
#      - build
#
#build_job:fedora_28:
#  image: registry.gitlab.com/neurochaintech/core/fedora:28
#  stage: build
#  tags:
#    - cpp
#  script:
#    - bot_build "Release"
#  artifacts:
#    paths:
#      - build
#
prod_image_build:ubuntu_18_04:
  image: docker:stable
  stage: prod_image
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:stable-dind
  dependencies:
    - build_job:ubuntu_18_04
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -f utils/dockers/Dockerfile.core -t $DOCKER_PROD_IMAGE .
    - docker push $DOCKER_PROD_IMAGE

pages:
  image: alpine
  stage: doxygen
  before_script:
    - apk update
    - apk add doxygen
    - apk add ttf-freefont graphviz
  script:
    - cd build && doxygen ../doc/Doxyfile
    - mv html ../public
    - mv ../coverage.html ../public
  dependencies:
    - build_job:ubuntu_18_04
  only:
    - feature/ledger
  artifacts:
    paths:
      - public

.bot_build: &bot_build |
  function bot_build() {
    echo "Building in $1"
    set -ex 
    export BUILD_TYPE=$1
    mkdir build || echo k
    cd build
    cmake -DCMAKE_INSTALL_PREFIX=${CI_PROJECT_DIR}/root -DCMAKE_BUILD_TYPE=$1 ..
    cmake --build .
    mkdir /tmp/db && nohup mongod --dbpath /tmp/db & 
    sleep 5
    mongo mongodb://localhost:27017/neuro --eval "db.coin.find();"
    python3 ../utils/dockers/times3.py ctest -V || echo ok
    cd .. && python3 -m gcovr -p -r . --html -o coverage.html
  }

before_script:
  - *bot_build
